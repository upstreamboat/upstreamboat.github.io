{"title":"watch","uid":"6b30ca1d6f90b3c88a0e57ca647706ec","slug":"杂学/前端/vue/watch","date":"2024-10-12T01:36:55.691Z","updated":"2024-10-19T08:18:08.733Z","comments":true,"path":"api/articles/杂学/前端/vue/watch.json","keywords":null,"cover":"/images/cover/8.png","content":"<p>监视【ref】定义的【对象类型】数据，监视的是对象本身的地址值。若想同时监视对象内部属性的变化，需要手动开启深度监视</p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script setup lang=<span class=\"string\">&quot;ts&quot;</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; ref, watch &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;vue&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> sum = <span class=\"title function_\">ref</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">name</span>: <span class=\"string\">&#x27;Jack&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">age</span>: <span class=\"number\">1</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">changeSum</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  sum.<span class=\"property\">value</span>.<span class=\"property\">age</span> += <span class=\"number\">1</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// watch的第一个参数是：被监视的数据</span></span><br><span class=\"line\"><span class=\"comment\">// watch的第二个参数是：监视的回调</span></span><br><span class=\"line\"><span class=\"comment\">// watch的第三个参数是：配置对象（deep、immediate等等.....）</span></span><br><span class=\"line\"><span class=\"comment\">// watch会返回一个函数，调用它可以停止监视</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> stopWatch = <span class=\"title function_\">watch</span>(sum, <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;sum is &#x27;</span>, newValue, oldValue)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (newValue.<span class=\"property\">age</span> == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">stopWatch</span>()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;, &#123; <span class=\"attr\">deep</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>若只想监视 ref 对象内部的属性，监视源需要使用箭头函数表示：<code>​()=&gt;sum.value.name​</code></p>\n<figure class=\"highlight ts\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">watch</span>(<span class=\"function\">()=&gt;</span>sum.<span class=\"property\">value</span>.<span class=\"property\">name</span>, <span class=\"function\">(<span class=\"params\">newValue, oldValue</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;sum is &#x27;</span>, newValue, oldValue)</span><br><span class=\"line\">&#125;,&#123;<span class=\"attr\">deep</span>:<span class=\"literal\">true</span>&#125;)</span><br></pre></td></tr></table></figure>\n\n<p>watchEffect()无需指明要监视的目标，它会在创建后自动立即调用一次，然后在依赖的目标发生变化时再次调用</p>\n","text":"监视【ref】定义的【对象类型】数据，监视的是对象本身的地址值。若想同时监视对象内部属性的变化，需要手动开启深度监视 123456789101112131415...","permalink":"/post/杂学/前端/vue/watch","photos":[],"count_time":{"symbolsCount":899,"symbolsTime":"1 mins."},"categories":[{"name":"vue","slug":"vue","count":15,"path":"api/categories/vue.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"router","uid":"cf6c58cf6e0199fa915a4eb514ed86d2","slug":"杂学/前端/vue/router","date":"2024-10-12T01:39:55.170Z","updated":"2024-10-19T08:18:11.144Z","comments":true,"path":"api/articles/杂学/前端/vue/router.json","keywords":null,"cover":"/images/cover/8.png","text":"路由组件六步走 创建组件：Detail.vue 创建路由：const routes = [{},{}…] 配置路由占位： 配置路由导航：XXX 创建路由器：co...","permalink":"/post/杂学/前端/vue/router","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"vue","slug":"vue","count":15,"path":"api/categories/vue.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"computed","uid":"e33431be245779e6f5982b9899cac3e4","slug":"杂学/前端/vue/computed","date":"2024-10-12T01:34:36.501Z","updated":"2024-10-19T08:18:06.178Z","comments":true,"path":"api/articles/杂学/前端/vue/computed.json","keywords":null,"cover":"/images/cover/8.png","text":"computed 仅被调用一次。只有当依赖的对象值（即 name、age 的值）发生变化时，才会被再次调用 computed 的返回对象是响应式的 comput...","permalink":"/post/杂学/前端/vue/computed","photos":[],"count_time":{"symbolsCount":778,"symbolsTime":"1 mins."},"categories":[{"name":"vue","slug":"vue","count":15,"path":"api/categories/vue.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}