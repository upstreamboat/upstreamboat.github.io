{"title":"代码规范","uid":"26cf5333f386846f9a13aec070a0730c","slug":"GO语言/项目/代码规范","date":"2024-10-12T02:29:30.432Z","updated":"2024-10-19T08:25:07.426Z","comments":true,"path":"api/articles/GO语言/项目/代码规范.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"代码规范\"><a href=\"#代码规范\" class=\"headerlink\" title=\"代码规范\"></a>代码规范</h1><ul>\n<li><p>命名：包名（mypackage）、常量名（ItemCount）</p>\n</li>\n<li><p>需要管理的错误、常量，定义到独立文件中；</p>\n</li>\n<li><p>边界要准确：确认是 <code>if len(cids) &lt;= 0</code> 还是 <code>if len(cids) == 0</code>；</p>\n</li>\n<li><p>错误日志打印：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>信息+字段+错误<br><code>c.Error(gameerror.QuickSellErrMsg, zap.Any(&quot;id&quot;, id), zap.Error(err))</code></p></blockquote>\n</li>\n<li><p>错误对象捕捉：<code>fmt.Errorf(gameerror.GetUnassignedItemsErrMsg+&quot;：%w&quot;, err)</code></p>\n</li>\n<li><p>底层功能方法直接抛出 error，在业务方法中处理</p>\n</li>\n<li><p>减少嵌套：</p>\n  <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 推荐：</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(miscItems) == <span class=\"number\">0</span> &#123;<span class=\"keyword\">return</span> <span class=\"literal\">nil</span>&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span>&#123;&#125;</span><br></pre></td></tr></table></figure>\n\n  <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 不推荐：</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(miscItems) &gt; <span class=\"number\">0</span> &#123;<span class=\"keyword\">for</span>&#123;&#125;&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>单一返回值写成一行：</p>\n  <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> err = c.sellItem(&amp;item); err != <span class=\"literal\">nil</span> &#123;<span class=\"keyword\">return</span> err&#125;</span><br></pre></td></tr></table></figure></li>\n<li><p>错误处理：打印堆栈<br>  自测下来还是建议使用。虽然网上有说法（<a href=\"https://blog.hackerpie.com/posts/programming-paradigm/golang-error-logs/\">说法来源</a>）说不推荐使用 github.com&#x2F;pkg&#x2F;errors 该包。</p>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>import &quot;github.com/pkg/errors&quot;</code><br>最底层创建：<code>err := errors.New(&quot;aaa&quot;)</code><br>调用层包装：<code>err = errors.WithMessagef(err, &quot;error occurred, id=%d&quot;, 3)</code></p>\n<blockquote>\n<p>为什么不用 <code>errors.Wrapf</code>：会多打印一份 Wrapf 返回值的堆栈信息</p></blockquote>\n<p>最上层打印：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>fmt.Printf(&quot;%+v\\n&quot;, err)</code> &#x2F;&#x2F;打印堆栈<br><code>fmt.Printf(&quot;%v\\n&quot;, err)</code> &#x2F;&#x2F;不打印堆栈</p></blockquote>\n<p>最上层获取错误：err.Error()</p>\n</blockquote>\n","text":"代码规范 命名：包名（mypackage）、常量名（ItemCount） 需要管理的错误、常量，定义到独立文件中； 边界要准确：确认是 if len(cids)...","permalink":"/post/GO语言/项目/代码规范","photos":[],"count_time":{"symbolsCount":973,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E8%A7%84%E8%8C%83\"><span class=\"toc-text\">代码规范</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"linux-01-快捷键","uid":"6839177aa32604fdb2b106479a7056e3","slug":"命令/linux/linux-01-快捷键","date":"2024-10-12T08:40:34.789Z","updated":"2024-10-19T08:15:55.600Z","comments":true,"path":"api/articles/命令/linux/linux-01-快捷键.json","keywords":null,"cover":"/images/cover/7.png","text":"linux-01-快捷键 A B ctrl+u 清空光标之前的输入 ctrl+l 清屏 ctrl+w 删除输入的前一个单词 ","permalink":"/post/命令/linux/linux-01-快捷键","photos":[],"count_time":{"symbolsCount":73,"symbolsTime":"1 mins."},"categories":[{"name":"命令","slug":"命令","count":15,"path":"api/categories/命令.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"项目层次","uid":"a161ef1c1cef77773912987d7ea38734","slug":"GO语言/项目/项目层次","date":"2024-10-12T02:29:30.394Z","updated":"2024-10-19T08:25:04.231Z","comments":true,"path":"api/articles/GO语言/项目/项目层次.json","keywords":null,"cover":"/images/cover/5.png","text":"项目层次 ","permalink":"/post/GO语言/项目/项目层次","photos":[],"count_time":{"symbolsCount":5,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}