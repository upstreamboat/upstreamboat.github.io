{"title":"依赖注入","uid":"3f2ed32fdfa2e792bea16be6c66658d9","slug":"GO语言/基础/依赖注入","date":"2024-10-12T02:26:58.220Z","updated":"2024-10-19T08:23:56.631Z","comments":true,"path":"api/articles/GO语言/基础/依赖注入.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"依赖注入\"><a href=\"#依赖注入\" class=\"headerlink\" title=\"依赖注入\"></a>依赖注入</h1><ol>\n<li><p><a href=\"https://segmentfault.com/a/1190000044962140\">参考</a></p>\n</li>\n<li><p>依赖注入：一段代码依赖于另一段代码，将后者以参数形式注入到前者，这就是依赖注入<br>控制反转：控制反转是一种程序设计思想，依赖注入是实现这种思想的一种主流方式。</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db := NewDB()</span><br><span class=\"line\">store := NewStore(db)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建store需要依赖NewDB()，将db注入NewStore()中，这就是依赖注入。</span></span><br><span class=\"line\"><span class=\"comment\">// 在go中依赖注入通常用来存储实例，比如：</span></span><br><span class=\"line\"><span class=\"keyword\">type</span> <span class=\"keyword\">struct</span> Store &#123;</span><br><span class=\"line\">\tDB</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 要调用DB的实例，需要通过Store的实例</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>wire 库：个人感觉不好，不建议使用</p>\n</li>\n</ol>\n","text":"依赖注入 参考 依赖注入：一段代码依赖于另一段代码，将后者以参数形式注入到前者，这就是依赖注入控制反转：控制反转是一种程序设计思想，依赖注入是实现这种思想的一种...","permalink":"/post/GO语言/基础/依赖注入","photos":[],"count_time":{"symbolsCount":284,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5\"><span class=\"toc-text\">依赖注入</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"import_init","uid":"89b3df93828c893bd967552f490f0e64","slug":"GO语言/基础/import_init","date":"2024-10-12T02:26:58.263Z","updated":"2024-10-19T08:23:58.905Z","comments":true,"path":"api/articles/GO语言/基础/import_init.json","keywords":null,"cover":"/images/cover/5.png","text":"import/initimportimport 时会依次加载目标包的 const、var、init()（这是重点，导入会自动运行 init()，执行时刻为 im...","permalink":"/post/GO语言/基础/import_init","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"泛型","uid":"4ac06be8c7a43e5fa8c5ae374f435567","slug":"GO语言/基础/泛型","date":"2024-10-12T02:26:58.205Z","updated":"2024-10-19T08:23:54.314Z","comments":true,"path":"api/articles/GO语言/基础/泛型.json","keywords":null,"cover":"/images/cover/5.png","text":"泛型作用泛型主要用来降低代码重复率 类型约束定义 法一：通过接口定义 123type Interger interface { ~int | int8 | in...","permalink":"/post/GO语言/基础/泛型","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}