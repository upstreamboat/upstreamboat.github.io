{"title":"","type":"page","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"/* 脚本功能：给指定文件夹下的所有文件 插入 模板文件 如果md文件已存在头信息，请先执行delete_head_info.js脚本删除头信息。 */ // 指定_posts文件夹和模板文件 const postsFolder = \"_posts/命令\"; const temp...","date":"2024-10-19T08:30:11.848Z","updated":"2024-10-19T08:30:11.848Z","comments":true,"path":"api/pages/scripts/batch_insert_template.js","covers":null,"content":"/*\n    脚本功能：给指定文件夹下的所有文件 插入 模板文件\n\n    如果md文件已存在头信息，请先执行delete_head_info.js脚本删除头信息。\n*/\n\n// 指定_posts文件夹和模板文件\nconst postsFolder = \"_posts/命令\";\nconst templateFileName = \"通用模板.md\";\n\n// 获取所有笔记\nconst files = app.vault.getFiles();\n\n// 读取模板内容\nconst templateFile = files.find(file => file.name === templateFileName);\nif (!templateFile) {\n    console.error(`未找到模板文件: ${templateFileName}`);\n    return;\n}\n\napp.vault.read(templateFile).then(templateContent => {\n    files.forEach(file => {\n        // 检查文件是否在_posts文件夹内\n        if (file.path.startsWith(postsFolder) && file.extension === \"md\") {\n            // 读取当前文件内容\n            app.vault.read(file).then(fileContent => {\n                // 检查是否存在头部文档属性\n                const lines = fileContent.split(\"\\n\");\n                const headerCount = lines.filter(line => line.trim() === \"---\").length;\n                if (headerCount > 0) {\n                    console.log(`跳过文件: ${file.path} (已存在头部属性信息)`);\n                    return; // 跳过该文件\n                }\n\n                // 插入模板内容\n                const updatedContent = templateContent + \"\\n\\n\" + fileContent;\n\n                // 写回文件\n                app.vault.modify(file, updatedContent).then(() => {\n                    console.log(`更新成功: ${file.path}`);\n                }).catch(err => {\n                    console.error(`写回文件失败: ${file.path}, 错误: ${err}`);\n                });\n            });\n        }\n    });\n}).catch(err => {\n    console.error(`读取模板文件失败: ${err}`);\n});\n","count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"toc":"","data":[]}