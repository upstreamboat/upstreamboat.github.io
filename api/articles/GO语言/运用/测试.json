{"title":"测试","uid":"ff294b41f6454d72b979d968dd4769d6","slug":"GO语言/运用/测试","date":"2024-10-12T02:28:08.766Z","updated":"2024-10-19T08:25:12.918Z","comments":true,"path":"api/articles/GO语言/运用/测试.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h1><ul>\n<li>TestMain：固定的测试写法，相当于钩子函数，并不是测试 main()的</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">TestMain</span><span class=\"params\">(m *testing.M)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Println(<span class=\"string\">&quot;before&quot;</span>)            <span class=\"comment\">// 测试程序运行前要做的事</span></span><br><span class=\"line\"></span><br><span class=\"line\">resultCode := m.Run()            <span class=\"comment\">// 运行</span></span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Println(<span class=\"string\">&quot;after&quot;</span>, resultCode) <span class=\"comment\">// 测试程序结束后要做的事</span></span><br><span class=\"line\"></span><br><span class=\"line\">os.Exit(resultCode)              <span class=\"comment\">// 退出</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试 main()</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Test000</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">wg := sync.WaitGroup&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">wg.Add(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 启动main</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">go</span> main() <span class=\"comment\">// 因为main启动后会处于持续监听状态，所以需要使用协程</span></span><br><span class=\"line\"></span><br><span class=\"line\">time.Sleep(<span class=\"number\">5</span> * time.Second) <span class=\"comment\">// 预留main启动时间</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 要做的事</span></span><br><span class=\"line\"></span><br><span class=\"line\">global.GVA_LOG.Info(<span class=\"string\">&quot;fuck&quot;</span>) <span class=\"comment\">// 启动后便可以正常调用了</span></span><br><span class=\"line\"></span><br><span class=\"line\">wg.Wait()     <span class=\"comment\">// 不Done()，保持阻塞</span></span><br><span class=\"line\"></span><br><span class=\"line\">t.Log(<span class=\"string\">&quot;exit&quot;</span>) <span class=\"comment\">// 无法到达的代码</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>测试函数中可以跑子测试</li>\n</ul>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Test071901</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">t.Run(<span class=\"string\">&quot;fuck&quot;</span>, Test071902)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"测试 TestMain：固定的测试写法，相当于钩子函数，并不是测试 main()的 1234567891011func TestMain(m *testing....","permalink":"/post/GO语言/运用/测试","photos":[],"count_time":{"symbolsCount":724,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"测试--性能","uid":"a68516acfce98009045c4d56a3a6c1f1","slug":"GO语言/运用/测试--性能","date":"2024-10-12T02:28:08.785Z","updated":"2024-10-19T08:25:14.780Z","comments":true,"path":"api/articles/GO语言/运用/测试--性能.json","keywords":null,"cover":"/images/cover/5.png","text":"测试–性能定义Benchmark：基准测试：通过测试 CPU 和内存的效率问题，来评估被测试代码的性能 命令go test -bench=Benchmark1 ...","permalink":"/post/GO语言/运用/测试--性能","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"值、引用传递","uid":"dd722656cd65c110c67a2adf5b28eecf","slug":"GO语言/运用/值、引用传递","date":"2024-10-12T02:28:08.749Z","updated":"2024-10-19T08:25:11.139Z","comments":true,"path":"api/articles/GO语言/运用/值、引用传递.json","keywords":null,"cover":"/images/cover/5.png","text":"值、引用传递 值传递 123456789101112131415func swap(a, b int) {var temp intprintln(\"--swap...","permalink":"/post/GO语言/运用/值、引用传递","photos":[],"count_time":{"symbolsCount":737,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}