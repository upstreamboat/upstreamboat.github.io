{"title":"内联优化_内存对齐","uid":"93f99ad47b857fa13d267d1a61a27ce9","slug":"GO语言/运用/内联优化_内存对齐","date":"2024-10-12T02:28:09.083Z","updated":"2024-10-19T08:25:41.327Z","comments":true,"path":"api/articles/GO语言/运用/内联优化_内存对齐.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"内联优化-内存对齐\"><a href=\"#内联优化-内存对齐\" class=\"headerlink\" title=\"内联优化&#x2F;内存对齐\"></a>内联优化&#x2F;内存对齐</h1><ol>\n<li>**<em>内联优化</em>**：就是把一些简短的函数在调用它的地方展开。因为调用函数会有性能开销，内联优化后可以缩短代码运行时间。<br>【 <a href=\"https://studygolang.com/articles/28335\">https://studygolang.com/articles/28335</a>】</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// go:noinline</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">max</span><span class=\"params\">(a, b <span class=\"type\">int</span>)</span></span> <span class=\"type\">int</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> a &gt; b &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> a</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> b</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">BenchmarkMax</span><span class=\"params\">(b *testing.B)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> r <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; b.N; i++ &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">r = max(<span class=\"number\">-1</span>, i)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">_ = r</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 解除首行注释go:noinline，执行时间会大幅缩短</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">解除首行注释go:noinline，执行时间会大幅缩短</span></span></code></pre></div></blockquote>\n<ol start=\"2\">\n<li>**<em>内存对齐</em>**：是为了适应 CPU 对结构体数据进行快速访问。cpu 一次访问数据位数（即字长）是固定的，32 位系统是 4 字节，64 位系统是 8 字节。<br>对齐规则：略<br>使用：知道编译器会进行内存对齐即可，无需特意关注<br>【 <a href=\"https://segmentfault.com/a/1190000045042365\">https://segmentfault.com/a/1190000045042365</a>】</li>\n</ol>\n","text":"内联优化/内存对齐 **内联优化**：就是把一些简短的函数在调用它的地方展开。因为调用函数会有性能开销，内联优化后可以缩短代码运行时间。【 https://st...","permalink":"/post/GO语言/运用/内联优化_内存对齐","photos":[],"count_time":{"symbolsCount":589,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%86%85%E8%81%94%E4%BC%98%E5%8C%96-%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90\"><span class=\"toc-text\">内联优化&#x2F;内存对齐</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"创建client实例","uid":"dfcfc60acea6f8943904320d565ee8ae","slug":"GO语言/运用/创建client实例","date":"2024-10-12T02:28:09.112Z","updated":"2024-10-19T08:25:42.966Z","comments":true,"path":"api/articles/GO语言/运用/创建client实例.json","keywords":null,"cover":"/images/cover/5.png","text":"创建 client 实例mysqlClient 12345678910111213141516171819202122232425262728293031323...","permalink":"/post/GO语言/运用/创建client实例","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"空结构体","uid":"516f488d0899eefbc39ef09d7fd24821","slug":"GO语言/运用/空结构体","date":"2024-10-12T02:28:09.066Z","updated":"2024-10-19T08:25:39.681Z","comments":true,"path":"api/articles/GO语言/运用/空结构体.json","keywords":null,"cover":"/images/cover/5.png","text":"空结构体 空结构体的使用场景：【 https://developer.aliyun.com/article/1230762】 实现 Set 集合类型 用于通道信...","permalink":"/post/GO语言/运用/空结构体","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}