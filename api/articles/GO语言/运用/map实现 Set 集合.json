{"title":"map实现 Set 集合","uid":"b300acae605253324e173dcf841400a6","slug":"GO语言/运用/map实现 Set 集合","date":"2024-10-12T02:28:09.017Z","updated":"2024-10-19T08:25:38.396Z","comments":true,"path":"api/articles/GO语言/运用/map实现 Set 集合.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"map-实现-Set-集合\"><a href=\"#map-实现-Set-集合\" class=\"headerlink\" title=\"map 实现 Set 集合\"></a>map 实现 Set 集合</h1><p>在 Go 语言中，虽然没有内置 Set 集合类型，但是我们可以利用 map 类型来实现一个 Set 集合。由于 map 的 key 具有唯一性，我们可以将元素存储为 key，而 value 没有实际作用，为了节省内存，我们可以使用空结构体作为 value 的值。</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Set[K comparable] <span class=\"keyword\">map</span>[K]<span class=\"keyword\">struct</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s Set[K])</span></span> Add(val K) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   s[val] = <span class=\"keyword\">struct</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s Set[K])</span></span> Remove(val K) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"built_in\">delete</span>(s, val)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(s Set[K])</span></span> Contains(val K) <span class=\"type\">bool</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   _, ok := s[val]</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">return</span> ok</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   set := Set[<span class=\"type\">string</span>]&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   set.Add(<span class=\"string\">&quot;陈明勇&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">   fmt.Println(set.Contains(<span class=\"string\">&quot;陈明勇&quot;</span>)) <span class=\"comment\">// true</span></span><br><span class=\"line\"></span><br><span class=\"line\">   set.Remove(<span class=\"string\">&quot;陈明勇&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">   fmt.Println(set.Contains(<span class=\"string\">&quot;陈明勇&quot;</span>)) <span class=\"comment\">// false</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"map 实现 Set 集合在 Go 语言中，虽然没有内置 Set 集合类型，但是我们可以利用 map 类型来实现一个 Set 集合。由于 map 的 key 具...","permalink":"/post/GO语言/运用/map实现 Set 集合","photos":[],"count_time":{"symbolsCount":764,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#map-%E5%AE%9E%E7%8E%B0-Set-%E9%9B%86%E5%90%88\"><span class=\"toc-text\">map 实现 Set 集合</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"空结构体","uid":"516f488d0899eefbc39ef09d7fd24821","slug":"GO语言/运用/空结构体","date":"2024-10-12T02:28:09.066Z","updated":"2024-10-19T08:25:39.681Z","comments":true,"path":"api/articles/GO语言/运用/空结构体.json","keywords":null,"cover":"/images/cover/5.png","text":"空结构体 空结构体的使用场景：【 https://developer.aliyun.com/article/1230762】 实现 Set 集合类型 用于通道信...","permalink":"/post/GO语言/运用/空结构体","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"类型转换--隔代转换","uid":"e29ae464d621fed07faf5e91c32ff035","slug":"GO语言/运用/类型转换--隔代转换","date":"2024-10-12T02:28:08.999Z","updated":"2024-10-19T08:25:37.034Z","comments":true,"path":"api/articles/GO语言/运用/类型转换--隔代转换.json","keywords":null,"cover":"/images/cover/5.png","text":"类型转换–隔代转换12345678910111213141516171819202122232425262728293031type MyInt int64ty...","permalink":"/post/GO语言/运用/类型转换--隔代转换","photos":[],"count_time":{"symbolsCount":385,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}