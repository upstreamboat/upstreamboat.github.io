{"title":"","type":"page","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"/* 脚本功能：删除指定文件夹下的所有文件的头部信息中的 poster等 标签 */ // 获取所有笔记 const files = app.vault.getFiles(); // 指定需要清理头部属性的文件夹 const targetFolder = \"_posts\"; co...","date":"2024-10-15T09:44:12.979Z","updated":"2024-10-15T09:44:12.979Z","comments":true,"path":"api/pages/scripts/delete_poster.js","covers":null,"content":"/*\n    脚本功能：删除指定文件夹下的所有文件的头部信息中的 poster等 标签\n*/\n\n// 获取所有笔记\nconst files = app.vault.getFiles();\n\n// 指定需要清理头部属性的文件夹\nconst targetFolder = \"_posts\";\n\nconst tags = ['poster', '  headline', '  caption', '  color'];\n\nfiles.forEach(file => {\n    // 检查文件是否在目标文件夹内\n    if (file.path.startsWith(targetFolder) && file.extension === \"md\") {\n        // 读取当前文件内容\n        app.vault.read(file).then(fileContent => {\n            const lines = fileContent.split(\"\\n\");\n            \n            // 过滤掉指定标签的行\n            const updatedLines = lines.filter(line => {\n                return !tags.some(tag => line.startsWith(tag + ':'));\n            });\n\n            // 写回文件\n            app.vault.modify(file, updatedLines.join('\\n')).then(() => {\n                console.log(`更新成功: ${file.name}`);\n            }).catch(err => {\n                console.error(`写回文件失败: ${file.path}, 错误: ${err}`);\n            });\n        }).catch(err => {\n            console.error(`读取文件失败: ${file.path}, 错误: ${err}`);\n        });\n    }\n});\n","count_time":{"symbolsCount":998,"symbolsTime":"1 mins."},"toc":"","data":[]}