{"title":"空结构体","uid":"516f488d0899eefbc39ef09d7fd24821","slug":"GO语言/运用/空结构体","date":"2024-10-12T02:28:09.066Z","updated":"2024-10-19T08:25:39.681Z","comments":true,"path":"api/articles/GO语言/运用/空结构体.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"空结构体\"><a href=\"#空结构体\" class=\"headerlink\" title=\"空结构体\"></a>空结构体</h1><ol>\n<li><p>空结构体的使用场景：【 <a href=\"https://developer.aliyun.com/article/1230762\">https://developer.aliyun.com/article/1230762</a>】</p>\n<ol>\n<li>实现  Set  集合类型</li>\n<li>用于通道信号</li>\n<li>作为方法接收器</li>\n</ol>\n</li>\n<li><p>空结构体不占用内存，字节大小为 0</p>\n</li>\n<li><p>所有空结构体地址相同：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>在Go语言中，所有针对 size==0 的内存分配，用的都是同一个地址 &amp;zerobase（zerobase是runtime包中的变量）</code></p></blockquote>\n</li>\n<li><p>空结构体比较与变量逃逸</p>\n<ol>\n<li>未逃逸时，空结构体比较：false。</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>因为编译器自动优化代码，直接将比较表达式转成 false 常量，实际并没有进行比较<br>如果关闭编译优化，让其进行比较，则结果为 true</p></blockquote>\n<ol start=\"2\">\n<li>变量逃逸到堆时，空结构体比较：true。</li>\n</ol>\n<p>还是有些地方没搞懂，强记结论：逃逸，比较地址为 true；未逃逸，比较地址为 false**<em>。</em>**</p>\n</li>\n<li><p>Code</p>\n</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 未逃逸，编译优化</span></span><br><span class=\"line\">a := &amp;<span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">b := &amp;<span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 因为代码进行了编译优化，所以地址相等，但结果不相等</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(a, b, a == b) <span class=\"comment\">// go run main.go: 0xc000055f40 0xc000055f40 false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 关闭编译优化-N，结果便相等了</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(a, b, a == b) <span class=\"comment\">// go run -gcflags &quot;-m -N -l&quot; main.go: 0xc000055f1f 0xc000055f1f true</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a := <span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">b := <span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;a, &amp;b, a == b)   <span class=\"comment\">// go run -gcflags &quot;-m -N -l&quot; main.go: 0xc000055f1e 0xc000055f1e true</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;a, &amp;b, &amp;a == &amp;b) <span class=\"comment\">// go run -gcflags &quot;-m -N -l&quot; main.go: 0xc000055f1e 0xc000055f1e false</span></span><br><span class=\"line\"><span class=\"comment\">// 不知道为啥这里为false？</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki material-theme-palenight\" style=\"background-color: #292D3E\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #babed8\">不知道为啥这里为 false</span></span></code></pre></div></blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 逃逸</span></span><br><span class=\"line\">a := <span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">b := <span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">x := <span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">y := <span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">m := [<span class=\"number\">10</span>]<span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">n := [<span class=\"number\">10</span>]<span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">o := [<span class=\"number\">10</span>]<span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\">p := [<span class=\"number\">10</span>]<span class=\"keyword\">struct</span>&#123;&#125;&#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 空结构体对象，不占用内存空间，直接使用go内部变量zerobase的地址，因此它们的地址是相同的。</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;x, &amp;y, &amp;o, &amp;p) // 0xc000065eff 0xc000065eff 0xc000065eff 0xc000065eff</span></span><br><span class=\"line\">\t<span class=\"comment\">// 没有变量发生逃逸</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;a == &amp;b) // false</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;x == &amp;y) // false</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;a == &amp;x) // false</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;m == &amp;n) // false</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;o == &amp;p) // false</span></span><br><span class=\"line\"><span class=\"comment\">//println(&amp;n == &amp;p) // false</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 使用了fmt.Printf后，x、y、o、p将逃逸到了堆上，但是a、b、m、n则开辟在栈上。</span></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;%p,%p,%p,%p\\n&quot;</span>, &amp;x, &amp;y, &amp;o, &amp;p) <span class=\"comment\">// 0x5f73a0,0x5f73a0,0x5f73a0,0x5f73a0</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;a == &amp;b)                           <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;x == &amp;y)                           <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;a == &amp;x)                           <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;m == &amp;n)                           <span class=\"comment\">// false</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;o == &amp;p)                           <span class=\"comment\">// true</span></span><br><span class=\"line\"><span class=\"built_in\">println</span>(&amp;n == &amp;p)                           <span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n","text":"空结构体 空结构体的使用场景：【 https://developer.aliyun.com/article/1230762】 实现 Set 集合类型 用于通道信...","permalink":"/post/GO语言/运用/空结构体","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A9%BA%E7%BB%93%E6%9E%84%E4%BD%93\"><span class=\"toc-text\">空结构体</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"内联优化_内存对齐","uid":"93f99ad47b857fa13d267d1a61a27ce9","slug":"GO语言/运用/内联优化_内存对齐","date":"2024-10-12T02:28:09.083Z","updated":"2024-10-19T08:25:41.327Z","comments":true,"path":"api/articles/GO语言/运用/内联优化_内存对齐.json","keywords":null,"cover":"/images/cover/5.png","text":"内联优化/内存对齐 **内联优化**：就是把一些简短的函数在调用它的地方展开。因为调用函数会有性能开销，内联优化后可以缩短代码运行时间。【 https://st...","permalink":"/post/GO语言/运用/内联优化_内存对齐","photos":[],"count_time":{"symbolsCount":589,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"map实现 Set 集合","uid":"b300acae605253324e173dcf841400a6","slug":"GO语言/运用/map实现 Set 集合","date":"2024-10-12T02:28:09.017Z","updated":"2024-10-19T08:25:38.396Z","comments":true,"path":"api/articles/GO语言/运用/map实现 Set 集合.json","keywords":null,"cover":"/images/cover/5.png","text":"map 实现 Set 集合在 Go 语言中，虽然没有内置 Set 集合类型，但是我们可以利用 map 类型来实现一个 Set 集合。由于 map 的 key 具...","permalink":"/post/GO语言/运用/map实现 Set 集合","photos":[],"count_time":{"symbolsCount":764,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}