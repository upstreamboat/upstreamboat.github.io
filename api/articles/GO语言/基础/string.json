{"title":"string","uid":"5c8a0474d0d497359d76757037b0b5f8","slug":"GO语言/基础/string","date":"2024-10-12T02:26:58.714Z","updated":"2024-10-19T08:24:19.395Z","comments":true,"path":"api/articles/GO语言/基础/string.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h1><ol>\n<li>string 类型底层是一个只读的 byte 数组</li>\n<li>string 类型会分配 16 个字节的内存<br>内存大小可用 unsafe.sizeof()获得，注意它和 len()是不一样的</li>\n<li>golang 编码格式为 utf8，utf8 使用 1<del>4 个字节表示一个 unicode 字符<br>1 个英文字符占 1 个字节，1 个中文字符占 3 个字节<br>rune（int32）类型用来表示一个 unicode 字符对应的整数值，因为 utf8 一个字符是 1</del>4 个字节，rune 正好可以容纳</li>\n<li>遍历字符串要使用 range</li>\n<li>Code</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Test071001</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">str := <span class=\"string\">&quot;Golang梦工厂&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;size=%v\\n&quot;</span>, unsafe.Sizeof(str))   <span class=\"comment\">// 分配内存16字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;len=%v\\n&quot;</span>, <span class=\"built_in\">len</span>(str))              <span class=\"comment\">// 字节长度15</span></span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;rune len=%v\\n&quot;</span>, <span class=\"built_in\">len</span>([]<span class=\"type\">rune</span>(str))) <span class=\"comment\">// 字符长度9</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> k, v := <span class=\"keyword\">range</span> str &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;%v: %v (%T)\\n&quot;</span>, k, v, v) <span class=\"comment\">// 遍历字符</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Println(<span class=\"string\">&quot;----------------------&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i := <span class=\"number\">0</span>; i &lt; <span class=\"built_in\">len</span>(str); i++ &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Printf(<span class=\"string\">&quot;%v: %v (%T)\\n&quot;</span>, i, str[i], str[i]) <span class=\"comment\">// 遍历字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>输出结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// size=16</span><br><span class=\"line\">// len=15</span><br><span class=\"line\">// runelen=9</span><br><span class=\"line\">// 0:71(int32)</span><br><span class=\"line\">// 1:111(int32)</span><br><span class=\"line\">// 2:108(int32)</span><br><span class=\"line\">// 3:97(int32)</span><br><span class=\"line\">// 4:110(int32)</span><br><span class=\"line\">// 5:103(int32)</span><br><span class=\"line\">// 6:26790(int32)</span><br><span class=\"line\">// 9:24037(int32)</span><br><span class=\"line\">// 12:21378(int32)</span><br><span class=\"line\">// -----------------------------</span><br><span class=\"line\">// 0:71(uint8)</span><br><span class=\"line\">// 1:111(uint8)</span><br><span class=\"line\">// 2:108(uint8)</span><br><span class=\"line\">// 3:97(uint8)</span><br><span class=\"line\">// 4:110(uint8)</span><br><span class=\"line\">// 5:103(uint8)</span><br><span class=\"line\">// 6:230(uint8)</span><br><span class=\"line\">// 7:162(uint8)</span><br><span class=\"line\">// 8:166(uint8)</span><br><span class=\"line\">// 9:229(uint8)</span><br><span class=\"line\">// 10:183(uint8)</span><br><span class=\"line\">// 11:165(uint8)</span><br><span class=\"line\">// 12:229(uint8)</span><br><span class=\"line\">// 13:142(uint8)</span><br><span class=\"line\">// 14:130(uint8)</span><br></pre></td></tr></table></figure>\n","text":"string string 类型底层是一个只读的 byte 数组 string 类型会分配 16 个字节的内存内存大小可用 unsafe.sizeof()获得，...","permalink":"/post/GO语言/基础/string","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#string\"><span class=\"toc-text\">string</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"调用本地包","uid":"ca25cbdb297165570ca5c6b0f9026538","slug":"GO语言/运用/调用本地包","date":"2024-10-12T02:28:08.733Z","updated":"2024-10-19T08:25:09.279Z","comments":true,"path":"api/articles/GO语言/运用/调用本地包.json","keywords":null,"cover":"/images/cover/5.png","text":"调用本地包方法一、可以将本地包放入 SDK 的 src 目录下，即可调用方法二、 创建本地包 创建本地文件 在命令行执行语句：go mod init 名称 执行...","permalink":"/post/GO语言/运用/调用本地包","photos":[],"count_time":{"symbolsCount":416,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"库--gjson","uid":"5fe51bea965d1cf766e7673df4ca914f","slug":"GO语言/基础/库--gjson","date":"2024-10-12T02:26:58.690Z","updated":"2024-10-19T08:24:17.509Z","comments":true,"path":"api/articles/GO语言/基础/库--gjson.json","keywords":null,"cover":"/images/cover/5.png","text":"库–gjson直接获取 json 中字段内容，无需序列化github.com/tidwall/gjson ","permalink":"/post/GO语言/基础/库--gjson","photos":[],"count_time":{"symbolsCount":63,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}