{"title":"nginx","uid":"5657dbaafc65d44bb7226a49ee6df3c8","slug":"杂学/未分类/nginx","date":"2024-10-10T06:43:39.241Z","updated":"2024-10-19T08:21:42.163Z","comments":true,"path":"api/articles/杂学/未分类/nginx.json","keywords":null,"cover":"/images/cover/1.png","content":"<h1 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h1><ol>\n<li><p>步骤 1：打包 vue 项目：会生成 dist 目录（项目必须打包，无法直接使用）<br><code>npm run build</code></p>\n</li>\n<li><p>步骤 2：修改 nginx.conf</p>\n</li>\n</ol>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"string\">server</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">listen</span>  <span class=\"number\">8080</span><span class=\"string\">;</span> <span class=\"comment\"># 监听8080端口，所有8080请求都会被nginx拦截</span></span><br><span class=\"line\">        <span class=\"string\">server_name</span> <span class=\"string\">localhost;</span> <span class=\"comment\"># 服务名</span></span><br><span class=\"line\">        <span class=\"string\">location</span> <span class=\"string\">/</span> &#123; <span class=\"comment\"># 被拦截的请求如果是&quot;/&quot;，则走下面的配置</span></span><br><span class=\"line\">            <span class=\"string\">root</span> <span class=\"string\">/usr/html/dist;</span> <span class=\"comment\"># 设置当前工作目录</span></span><br><span class=\"line\">            <span class=\"string\">index</span> <span class=\"string\">index.html;</span> <span class=\"comment\"># 该请求返回的资源：/usr/html/dist/index.html</span></span><br><span class=\"line\">            <span class=\"comment\"># try_files $uri $uri/ /index.html; # 尝试寻找要返回的资源：先找</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">location</span> <span class=\"string\">/imgae</span> &#123;</span><br><span class=\"line\">            <span class=\"string\">root</span> <span class=\"string\">/usr/html/dist;</span></span><br><span class=\"line\">            <span class=\"comment\"># try_files：尝试寻找要返回的资源。</span></span><br><span class=\"line\">            <span class=\"comment\"># 如请求127.0.0.1:8080/images/test.gif</span></span><br><span class=\"line\">            <span class=\"comment\"># 先找/usr/html/dist/imgae/test.gif，</span></span><br><span class=\"line\">            <span class=\"comment\"># 若找不到再找/usr/html/dist/imgae/test.gif/目录下的index文件</span></span><br><span class=\"line\">            <span class=\"comment\"># 若找不到最后找index.html</span></span><br><span class=\"line\">            <span class=\"string\">try_files</span> <span class=\"string\">$uri</span> <span class=\"string\">$uri/</span> <span class=\"string\">/index.html;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"string\">location</span> <span class=\"string\">/api</span> &#123; <span class=\"comment\"># 转发所有的/api开头的请求，到后端服务器</span></span><br><span class=\"line\">            <span class=\"string\">proxy_set_header</span> <span class=\"string\">Host</span> <span class=\"string\">$http_host;</span></span><br><span class=\"line\">            <span class=\"string\">proxy_set_header</span>  <span class=\"string\">X-Real-IP</span> <span class=\"string\">$remote_addr;</span></span><br><span class=\"line\">            <span class=\"string\">proxy_set_header</span> <span class=\"string\">X-Forwarded-For</span> <span class=\"string\">$proxy_add_x_forwarded_for;</span></span><br><span class=\"line\">            <span class=\"string\">proxy_set_header</span> <span class=\"string\">X-Forwarded-Proto</span> <span class=\"string\">$scheme;</span></span><br><span class=\"line\">            <span class=\"string\">rewrite</span> <span class=\"string\">^/api/(.*)$</span> <span class=\"string\">/$1</span> <span class=\"string\">break;</span>  <span class=\"comment\">#重写</span></span><br><span class=\"line\">            <span class=\"string\">proxy_pass</span> [<span class=\"string\">http://127.0.0.1:8888</span>]<span class=\"string\">(http://127.0.0.1:8888);</span> <span class=\"comment\"># 设置代理服务器的协议和地址</span></span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>步骤 3：启动 nginx</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./nginx # 启动</span><br><span class=\"line\">./nginx -t # 检查配置文件是否有语法错误</span><br><span class=\"line\">./nginx -s reload # 若配置文件改动，重新加载配置文件</span><br><span class=\"line\">./nginx -s quit # 当前任务完成后，退出nginx</span><br><span class=\"line\">./nginx -s stop # 直接退出nginx</span><br></pre></td></tr></table></figure>\n","text":"使用 步骤 1：打包 vue 项目：会生成 dist 目录（项目必须打包，无法直接使用）npm run build 步骤 2：修改 nginx.conf 123...","permalink":"/post/杂学/未分类/nginx","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"未分类","slug":"未分类","count":21,"path":"api/categories/未分类.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"CA证书","uid":"f2abfae25e742024c7764769245f7cab","slug":"杂学/未分类/CA证书","date":"2024-10-10T07:06:05.694Z","updated":"2024-10-19T08:21:44.552Z","comments":true,"path":"api/articles/杂学/未分类/CA证书.json","keywords":null,"cover":"/images/cover/1.png","text":" ","permalink":"/post/杂学/未分类/CA证书","photos":[],"count_time":{"symbolsCount":1,"symbolsTime":"1 mins."},"categories":[{"name":"未分类","slug":"未分类","count":21,"path":"api/categories/未分类.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"index","uid":"0fed0bef913e91bf625068542167e100","slug":"index","date":"2024-10-09T07:32:00.252Z","updated":"2024-10-15T00:53:00.586Z","comments":true,"path":"api/articles/index.json","keywords":null,"cover":null,"text":"杂学Mysql01-事务02-引擎03-性能04-索引05-索引规则06-知识点 前端泛型跨域解决网络协议网址定位符axiosCookie、Session、To...","permalink":"/post/index","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[],"tags":[],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}