{"title":"08-图","uid":"36feb5f5be8b1bbb0ad32603cb33f232","slug":"杂学/数据结构/08-图","date":"2024-10-11T06:00:34.685Z","updated":"2024-10-19T08:20:38.848Z","comments":true,"path":"api/articles/杂学/数据结构/08-图.json","keywords":null,"cover":"/images/cover/3.png","content":"<p>多对多关系</p>\n<p>有向图、无向图</p>\n<p>二维数组或链表实现</p>\n","text":"多对多关系 有向图、无向图 二维数组或链表实现 ","permalink":"/post/杂学/数据结构/08-图","photos":[],"count_time":{"symbolsCount":24,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":10,"path":"api/categories/数据结构.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"算法","uid":"7b15f460606fcb4d23e6a93344af8c37","slug":"杂学/数据结构/算法","date":"2024-10-11T06:01:50.424Z","updated":"2024-10-19T08:20:41.301Z","comments":true,"path":"api/articles/杂学/数据结构/算法.json","keywords":null,"cover":"/images/cover/3.png","text":"排序下面 3 个平均时间复杂度：O(n^2) 冒泡：相邻两两交换选择：当前元素与后面所有元素比较，选择出最小值后交换位置插入：当前元素与前面所有元素比较，插入到...","permalink":"/post/杂学/数据结构/算法","photos":[],"count_time":{"symbolsCount":744,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":10,"path":"api/categories/数据结构.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"07-堆","uid":"3efb043dafcb75dfdb0d6746e6895a19","slug":"杂学/数据结构/07-堆","date":"2024-10-11T05:52:26.741Z","updated":"2024-10-19T08:20:36.528Z","comments":true,"path":"api/articles/杂学/数据结构/07-堆.json","keywords":null,"cover":"/images/cover/3.png","text":" 定义 堆是完全二叉树 有序：堆中某节点的值总是不大于（大顶堆）或不小于（小顶堆）其父节点的值 内存中通过数组实现 优点 可以轻易获取最大/最小值 操作： 向上...","permalink":"/post/杂学/数据结构/07-堆","photos":[],"count_time":{"symbolsCount":842,"symbolsTime":"1 mins."},"categories":[{"name":"数据结构","slug":"数据结构","count":10,"path":"api/categories/数据结构.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}