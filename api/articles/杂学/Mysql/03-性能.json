{"title":"03-性能","uid":"d8678c04f78a7831628a4e9648b18b4a","slug":"杂学/Mysql/03-性能","date":"2024-10-11T00:45:57.144Z","updated":"2024-10-19T08:22:34.395Z","comments":true,"path":"api/articles/杂学/Mysql/03-性能.json","keywords":null,"cover":"/images/cover/2.png","content":"<h1 id=\"性能分析–时间\"><a href=\"#性能分析–时间\" class=\"headerlink\" title=\"性能分析–时间\"></a>性能分析–时间</h1><h2 id=\"慢查询\"><a href=\"#慢查询\" class=\"headerlink\" title=\"慢查询\"></a>慢查询</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">global</span> status <span class=\"keyword\">like</span> <span class=\"string\">&#x27;Com_______&#x27;</span>; <span class=\"comment\">-- 显示增删改查的执行次数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">show</span> VARIABLES <span class=\"keyword\">like</span> <span class=\"string\">&#x27;slow_query_log&#x27;</span>; <span class=\"comment\">-- 显示慢查询日志</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>配置文件在&#x2F;etc&#x2F;my.conf</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> slow_query_log<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"comment\">-- 开启慢查询</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span> long_query_time<span class=\"operator\">=</span><span class=\"number\">2</span> <span class=\"comment\">-- 设置sql执行时间超过2s为慢查询</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>日志文件在&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;*-slow.log</li>\n</ul>\n<h2 id=\"profile\"><a href=\"#profile\" class=\"headerlink\" title=\"profile\"></a>profile</h2><p>通过 profile 查看 sql 的详细执行信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> @<span class=\"variable\">@have_profiling</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> @<span class=\"variable\">@profiling</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">set</span> profiling<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">show</span> profiles;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">show</span> profile cpu <span class=\"keyword\">for</span> query <span class=\"number\">252</span>; <span class=\"comment\">-- 通过query_id查看单个sql的详细执行信息</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模拟数据\"><a href=\"#模拟数据\" class=\"headerlink\" title=\"模拟数据\"></a>模拟数据</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename<span class=\"operator\">=</span><span class=\"string\">&#x27;aaaabd&#x27;</span>; <span class=\"comment\">-- 执行后会在慢查询日志中有记录，也会在profile中有记录</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> empno<span class=\"operator\">=</span><span class=\"string\">&#x27;1364&#x27;</span>; <span class=\"comment\">-- 因执行时间&lt;2s，只会在profile中有记录</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"性能分析–执行计划\"><a href=\"#性能分析–执行计划\" class=\"headerlink\" title=\"性能分析–执行计划\"></a>性能分析–执行计划</h1><p>desc 或 explain：可以显示 sql 的执行计划</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>执行结果的 type 字段说明：</p>\n<blockquote>\n<ul>\n<li>type：NULL：不查表</li>\n<li>type：const：查主键、唯一索引</li>\n<li>type：ref：查非唯一索引</li>\n<li>type：index：全索引查询</li>\n<li>type：all：全表查询</li>\n</ul></blockquote>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(<span class=\"number\">1</span>) <span class=\"keyword\">from</span> emp,dept <span class=\"keyword\">where</span> emp.deptno<span class=\"operator\">=</span>dept.id <span class=\"keyword\">and</span> dept.id<span class=\"operator\">=</span><span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> dept <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> deptno <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> ename<span class=\"operator\">=</span><span class=\"string\">&#x27;ZAEsaa&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li>添加索引 idx*deptno 后，查询性能无变化(因为 deptno 重复数据太多)</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> index idx_deptno <span class=\"keyword\">on</span> emp(deptno);</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">2</span>; # 约 <span class=\"number\">2</span><span class=\"operator\">~</span><span class=\"number\">3</span>s</span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">3</span>; # 约 <span class=\"number\">2</span><span class=\"operator\">~</span><span class=\"number\">3</span>s</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>添加索引 idx_deptno_ename 后，查询性能明显提升</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> index idx_deptno_ename <span class=\"keyword\">on</span> emp(deptno,ename);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">3</span> <span class=\"keyword\">and</span> ename<span class=\"operator\">=</span><span class=\"string\">&#x27;WJEWTE&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>但此时出现以下现象</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">2</span>; # 性能无变化 约<span class=\"number\">2</span><span class=\"operator\">~</span><span class=\"number\">3</span>s（走的是索引idx_deptno）</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">3</span>; # 性能变慢 约<span class=\"number\">26</span>s（因为走错了索引idx_deptno_ename，为什么会走错索引不知道）</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>解决办法：</p></blockquote>\n<ol>\n<li>指定索引</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp use index(idx_deptno) <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">3</span>; # 建议，实际结果未必是指定的索引</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp force index(idx_deptno) <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">3</span>; # 强制，实际结果一定是指定的索引</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> emp ignore index(idx_deptno_ename) <span class=\"keyword\">where</span> deptno<span class=\"operator\">=</span><span class=\"number\">3</span>; # 忽略，实际结果是其它索引</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改索引</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">--修改了字段顺序，打破了索引的最左前缀规则，使得上面的sql无法匹配到索引idx_deptno_ename</span></span><br><span class=\"line\"><span class=\"keyword\">CREATE</span> index idx_ename_deptno <span class=\"keyword\">on</span> emp(ename,deptno);</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>删除索引</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> index idx_deptno_ename <span class=\"keyword\">on</span> emp(deptno,ename);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"性能分析–sql-优化\"><a href=\"#性能分析–sql-优化\" class=\"headerlink\" title=\"性能分析–sql 优化\"></a>性能分析–sql 优化</h1><h3 id=\"1-插入优化\"><a href=\"#1-插入优化\" class=\"headerlink\" title=\"1. 插入优化\"></a>1. 插入优化</h3><ul>\n<li>使用 load 加载数据文件：比批量插入性能更好</li>\n<li>使用批量插入：比单条插入性能更好。因为单条 sql 每次插入都会开关事务，将多条 sql 合并会减少事务开销</li>\n</ul>\n<h3 id=\"2-主键优化\"><a href=\"#2-主键优化\" class=\"headerlink\" title=\"2. 主键优化\"></a>2. 主键优化</h3><ul>\n<li>尽量降低主键长度。因为无论是聚集还是非聚集索引，都会存储一份主键 id</li>\n<li>尽量保证顺序插入，可以设置主键自增。因为随机插入时，会发生页分裂</li>\n</ul>\n<h3 id=\"3-order-by-优化\"><a href=\"#3-order-by-优化\" class=\"headerlink\" title=\"3. order by 优化\"></a>3. order by 优化</h3><ul>\n<li>使用覆盖索引，并且为排序字段建立索引。涉及联合索引时，需遵守最左前缀规则（order by 是有顺序的，与 where 不同）</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 这两个sql是不一样，如果索引是idx_empno_ename，那么第二条sql就打破了最左前缀规则</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> empno,ename <span class=\"keyword\">from</span> emp <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> empno,ename;</span><br><span class=\"line\"><span class=\"keyword\">select</span> empno,ename <span class=\"keyword\">from</span> emp <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> ename,empno;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- where可以与order by一起满足最左前缀</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> empno,ename <span class=\"keyword\">from</span> emp <span class=\"keyword\">where</span> empno <span class=\"operator\">=</span> <span class=\"number\">1</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> ename;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>索引字段也是有顺序的，排序顺序需要和其相同或相反，但不能是一正一反</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> empno,ename <span class=\"keyword\">from</span> emp <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> empno <span class=\"keyword\">asc</span>, ename <span class=\"keyword\">asc</span>; <span class=\"comment\">-- 正确</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> empno,ename <span class=\"keyword\">from</span> emp <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> empno <span class=\"keyword\">desc</span>, ename <span class=\"keyword\">desc</span>; <span class=\"comment\">-- 正确，因为数据会形成链表，只要反向查找即可</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> empno,ename <span class=\"keyword\">from</span> emp <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> empno <span class=\"keyword\">asc</span>, ename <span class=\"keyword\">desc</span>; <span class=\"comment\">-- empno会走索引，ename则不会</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">-- 要想使该sql完全走索引，可以在创建索引时指定排序方式：</span></span><br><span class=\"line\">    <span class=\"keyword\">create</span> index idex_empno_ename <span class=\"keyword\">on</span> <span class=\"keyword\">table</span> emp(empno <span class=\"keyword\">asc</span>, ename <span class=\"keyword\">desc</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-group-by-优化（与-order-by-类似）\"><a href=\"#4-group-by-优化（与-order-by-类似）\" class=\"headerlink\" title=\"4. group by 优化（与 order by 类似）\"></a>4. group by 优化（与 order by 类似）</h3><ul>\n<li>使用覆盖索引，并且为分组字段建立索引。涉及联合索引时，需遵守最左前缀规则（group by 也是有顺序的）</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> fid,gid,<span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">from</span> bld <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> fid,gid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- where可以与group by一起满足最左前缀</span></span><br><span class=\"line\"><span class=\"keyword\">desc</span> <span class=\"keyword\">SELECT</span> gid,<span class=\"built_in\">count</span>(<span class=\"operator\">*</span>) <span class=\"keyword\">from</span> bld <span class=\"keyword\">where</span> fid<span class=\"operator\">=</span><span class=\"number\">1</span> <span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> gid;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-limit-优化\"><a href=\"#5-limit-优化\" class=\"headerlink\" title=\"5. limit 优化\"></a>5. limit 优化</h3><ul>\n<li>通过覆盖索引加子查询形式进行优化</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">-- 此语句耗时很长</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tb_sku limit <span class=\"number\">9000000</span>, <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 通过覆盖索引加快速度，直接通过主键索引进行排序及查询</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> tb_sku <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> id limit <span class=\"number\">9000000</span>, <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 下面的语句是错误的，因为 MySQL 不支持 in 里面使用 limit</span></span><br><span class=\"line\"><span class=\"comment\">-- select * from tb_sku where id in (select id from tb_sku order by id limit 9000000, 10);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 通过连表查询即可实现第一句的效果，并且能达到第二句的速度</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> tb_sku <span class=\"keyword\">as</span> s, (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> tb_sku <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> id limit <span class=\"number\">9000000</span>, <span class=\"number\">10</span>) <span class=\"keyword\">as</span> a <span class=\"keyword\">where</span> s.id <span class=\"operator\">=</span> a.id;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-update-优化\"><a href=\"#6-update-优化\" class=\"headerlink\" title=\"6. update 优化\"></a>6. update 优化</h3><ul>\n<li>update 的 where 字段有索引，则是行级锁，此时可以修改其它行数据</li>\n<li>update 的 where 字段无索引，则是表锁，此时无法修改该表数据</li>\n</ul>\n<h3 id=\"7-count-优化\"><a href=\"#7-count-优化\" class=\"headerlink\" title=\"7. count 优化\"></a>7. count 优化</h3><ul>\n<li>count(1)：走聚集索引，返回结果填充为 1，然后计算行数</li>\n<li>count(*)：走聚集索引，返回结果无填充，然后计算行数</li>\n<li>count(索引字段)：走索引，返回结果为字段内容，若字段设置为 not null，则直接计算行数；若未设置，则去除为 null 的字段再计算行数</li>\n<li>count(非索引字段)：全表扫描，返回结果为字段内容，若字段设置为 not null，则直接计算行数；若未设置，则去除为 null 的字段再计算行数</li>\n<li>count(null) &#x3D; 0</li>\n</ul>\n","text":"性能分析–时间慢查询123show global status like 'Com_______'; -- 显示增删改查的执行次数show VARIABLES ...","permalink":"/post/杂学/Mysql/03-性能","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":6,"path":"api/categories/Mysql.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E2%80%93%E6%97%B6%E9%97%B4\"><span class=\"toc-text\">性能分析–时间</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%85%A2%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">慢查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#profile\"><span class=\"toc-text\">profile</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">模拟数据</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E2%80%93%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92\"><span class=\"toc-text\">性能分析–执行计划</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E2%80%93sql-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">性能分析–sql 优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E6%8F%92%E5%85%A5%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">1. 插入优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E4%B8%BB%E9%94%AE%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">2. 主键优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-order-by-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">3. order by 优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-group-by-%E4%BC%98%E5%8C%96%EF%BC%88%E4%B8%8E-order-by-%E7%B1%BB%E4%BC%BC%EF%BC%89\"><span class=\"toc-text\">4. group by 优化（与 order by 类似）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-limit-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">5. limit 优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-update-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">6. update 优化</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-count-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">7. count 优化</span></a></li></ol></li></ol></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"04-索引","uid":"d837ac5d90753ab8aaca1b36dc2bf2da","slug":"杂学/Mysql/04-索引","date":"2024-10-11T01:12:20.673Z","updated":"2024-10-19T08:22:36.362Z","comments":true,"path":"api/articles/杂学/Mysql/04-索引.json","keywords":null,"cover":"/images/cover/2.png","text":"索引分类聚集索引 自动生成，有且仅有一个 1）根据主键自动生成2）主键不存在，根据唯一索引自动生成3）都不存在，生成一个隐藏的聚集索引（无法查看） 叶子节点中的...","permalink":"/post/杂学/Mysql/04-索引","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":6,"path":"api/categories/Mysql.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"02-引擎","uid":"2e22dd5c70e5e707ab9b420f2d590c06","slug":"杂学/Mysql/02-引擎","date":"2024-10-10T09:27:12.374Z","updated":"2024-10-19T08:22:32.676Z","comments":true,"path":"api/articles/杂学/Mysql/02-引擎.json","keywords":null,"cover":"/images/cover/2.png","text":"innodb特点事务、外键、行级锁 数据存储 mysql 的数据存储在硬盘文件中，和索引在同一个文件中。 存储区域划分(从外到内包含多个)：表空间–>段–>区(...","permalink":"/post/杂学/Mysql/02-引擎","photos":[],"count_time":{"symbolsCount":551,"symbolsTime":"1 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":6,"path":"api/categories/Mysql.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}