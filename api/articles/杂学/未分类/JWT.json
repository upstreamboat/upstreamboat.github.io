{"title":"JWT","uid":"56e366077d0e4b724da421159ab2428d","slug":"杂学/未分类/JWT","date":"2024-10-09T02:09:35.630Z","updated":"2024-10-19T08:21:24.169Z","comments":true,"path":"api/articles/杂学/未分类/JWT.json","keywords":null,"cover":"/images/cover/1.png","content":"<h1 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h1><p><a href=\"https://developer.aliyun.com/article/995894\">参考</a></p>\n<h2 id=\"生成-token\"><a href=\"#生成-token\" class=\"headerlink\" title=\"生成 token\"></a>生成 token</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">生成 Token 三步走：</span></span><br><span class=\"line\"><span class=\"comment\">\t1）设置 claim</span></span><br><span class=\"line\"><span class=\"comment\">\t2）对 claim 进行加密</span></span><br><span class=\"line\"><span class=\"comment\">\t3）签发密钥</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"params\">(jwtService *jwtService)</span></span> CreateToken(GuardName <span class=\"type\">string</span>, user JwtUser) (tokenData TokenOutPut, err <span class=\"type\">error</span>, token *jwt.Token) &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//设置 claim</span></span><br><span class=\"line\">\tcustomClaims := CustomClaims&#123;</span><br><span class=\"line\">\t\tStandardClaims: jwt.StandardClaims&#123;</span><br><span class=\"line\">\t\tExpiresAt: time.Now().Unix() + global.App.Config.Jwt.JwtTtl,</span><br><span class=\"line\">\t\tId:        user.GetUid(),</span><br><span class=\"line\">\t\tIssuer:    GuardName, <span class=\"comment\">// 用于在中间件中区分不同客户端颁发的 token，避免 token 跨端使用</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//token 生效时间</span></span><br><span class=\"line\">\t\tNotBefore: time.Now().Unix() - <span class=\"number\">10000</span>,</span><br><span class=\"line\">\t\t&#125;,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//对 claim 进行加密</span></span><br><span class=\"line\">\ttoken = jwt.NewWithClaims(jwt.SigningMethodHS256, customClaims)</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//签发密钥</span></span><br><span class=\"line\">\ttokenStr, err := token.SignedString([]<span class=\"type\">byte</span>(global.App.Config.Jwt.Secret))</span><br><span class=\"line\"></span><br><span class=\"line\">\ttokenData = TokenOutPut&#123;</span><br><span class=\"line\">\t\ttokenStr,</span><br><span class=\"line\">\t\t<span class=\"type\">int</span>(global.App.Config.Jwt.JwtTtl),</span><br><span class=\"line\">\t\tTokenType,</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"解析-token\"><a href=\"#解析-token\" class=\"headerlink\" title=\"解析 token\"></a>解析 token</h2><figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//ParseWithClaims(参 1，参 2，参 3)：参 1 是生成的 token，参 2 是 claim 用来存放解析后的数据，参 3 是回调函数用来提供密钥</span></span><br><span class=\"line\">token, err := jwt.ParseWithClaims(</span><br><span class=\"line\">\ttokenStr,</span><br><span class=\"line\">\t&amp;services.CustomClaims&#123;&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(token *jwt.Token)</span></span> (<span class=\"keyword\">interface</span>&#123;&#125;, <span class=\"type\">error</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> []<span class=\"type\">byte</span>(global.App.Config.Jwt.Secret), <span class=\"literal\">nil</span></span><br><span class=\"line\">\t&#125;,</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取 claim</span></span><br><span class=\"line\">claims := token.Claims.(*services.CustomClaims)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"为什么用-redis-存储-token？\"><a href=\"#为什么用-redis-存储-token？\" class=\"headerlink\" title=\"为什么用 redis 存储 token？\"></a>为什么用 redis 存储 token？</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>redis 的响应速度非常快；</li>\n<li>token 有时效性，而 redis 天然支持设置过期时间；</li>\n<li>登录信息一般不需要长效储存，所以可以减少 DB 的压力，直接用 redis。</li>\n</ol></blockquote>\n","text":"定义参考 生成 token123456789101112131415161718192021222324252627282930313233/*生成 Token...","permalink":"/post/杂学/未分类/JWT","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"未分类","slug":"未分类","count":25,"path":"api/categories/未分类.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">定义</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90-token\"><span class=\"toc-text\">生成 token</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90-token\"><span class=\"toc-text\">解析 token</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E7%94%A8-redis-%E5%AD%98%E5%82%A8-token%EF%BC%9F\"><span class=\"toc-text\">为什么用 redis 存储 token？</span></a></li></ol></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Protobuf","uid":"3bbead949023bae81c3a3a0f1356f7e4","slug":"杂学/未分类/Protobuf","date":"2024-10-09T02:09:35.631Z","updated":"2024-10-19T08:21:27.747Z","comments":true,"path":"api/articles/杂学/未分类/Protobuf.json","keywords":null,"cover":"/images/cover/1.png","text":"定义Protocol Buffer 用于序列化结构化数据。和 json\\xml 最大的区别是：json\\xml 都是基于文本格式，ProtoBuf 是二进制格式...","permalink":"/post/杂学/未分类/Protobuf","photos":[],"count_time":{"symbolsCount":784,"symbolsTime":"1 mins."},"categories":[{"name":"未分类","slug":"未分类","count":25,"path":"api/categories/未分类.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"Idea快捷键","uid":"2cdebd0fd70d7852b3b959fd1433d2e9","slug":"杂学/未分类/Idea快捷键","date":"2024-10-09T02:09:35.628Z","updated":"2024-10-19T08:21:12.270Z","comments":true,"path":"api/articles/杂学/未分类/Idea快捷键.json","keywords":null,"cover":"/images/cover/1.png","text":" 键 作用 说明 对象+. Ctrl + Alt + L 格式化代码 ctrl + - 收缩代码块 ctrl + = 展开代码块 ctrl +shift +- ...","permalink":"/post/杂学/未分类/Idea快捷键","photos":[],"count_time":{"symbolsCount":275,"symbolsTime":"1 mins."},"categories":[{"name":"未分类","slug":"未分类","count":25,"path":"api/categories/未分类.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}