{"title":"git-01-常用命令","uid":"44054c4b24deb794b261449477fecc9c","slug":"命令/git/git-01-常用命令","date":"2024-10-12T08:41:46.479Z","updated":"2024-10-19T08:14:59.406Z","comments":true,"path":"api/articles/命令/git/git-01-常用命令.json","keywords":null,"cover":"/images/cover/7.png","content":"<h1 id=\"git-01-常用命令\"><a href=\"#git-01-常用命令\" class=\"headerlink\" title=\"git-01-常用命令\"></a>git-01-常用命令</h1><h2 id=\"一、首次推送本地项目代码流程\"><a href=\"#一、首次推送本地项目代码流程\" class=\"headerlink\" title=\"一、首次推送本地项目代码流程\"></a>一、首次推送本地项目代码流程</h2><ol>\n<li><p>在项目目录下，创建本地仓库：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将文件加入到本地仓库：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add * 或者 git add .</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>将加入的文件提交到本地仓库：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m <span class=\"string\">&#x27;tc&#x27;</span> <span class=\"comment\">// -m &#x27;tc&#x27;表示添加本次提交的说明内容为 tc</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>建立远程连接：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git remote add origin http:<span class=\"comment\">//192.168.2.80:8090/root/study-01-golang.git</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>建立本地仓库分支与远程仓库分支的连接：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git branch --set-upstream-to=origin/&lt;branch&gt; master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>推送本地仓库代码到远程仓库：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push</span><br></pre></td></tr></table></figure>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>或者直接合并 5、6 两步：</p></blockquote>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git push --set-upstream origin master</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"二、非首次推送的几种情况\"><a href=\"#二、非首次推送的几种情况\" class=\"headerlink\" title=\"二、非首次推送的几种情况\"></a>二、非首次推送的几种情况</h2><ol>\n<li><p>本地修改：直接：<code>git push</code></p>\n</li>\n<li><p>远程修改：则需先执行：<code>git pull</code></p>\n</li>\n<li><p>本地修改 + 远程修改：<br>正确操作：二选一</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li><p><code>add-&gt;git stash-&gt;git pull-&gt;git stash apply-&gt;处理本地代码冲突-&gt;add-&gt;commit-&gt;push</code></p>\n<blockquote>\n<p>只会留下一条记录</p></blockquote>\n</li>\n<li><p><code>add-&gt;commit-&gt;git pull-&gt;处理本地代码冲突-&gt;add-&gt;commit-&gt;push</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>第一次 add-commit，是将本地修改的代码提交到本地仓库中，记为代码 A<br>第二次 add-commit，是将处理冲突后的代码提交到本地仓库中，记为代码 B（B 才是我们最终需要的代码）<br>会留下两条记录（详见下面的错误 3）</p></blockquote>\n</li>\n</ol>\n</blockquote>\n<p> 错误操作：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ol>\n<li>直接 <code>git pull</code>：失败，报错提示本地修改会被覆盖</li>\n<li><code>add-&gt;commit-&gt;git push</code>：失败，报错</li>\n<li><code>add-&gt;commit-&gt;git pull-&gt;处理本地代码冲突-&gt;push</code>：失败，报错（与错误 2 其实是同一种错误操作）</li>\n</ol>\n<blockquote>\n<p>这一步报错是因为此时 push 的是代码 A，而 A 与远程冲突无法推送<br>需要再次 <code>add-&gt;commit</code>，此时本地仓库中就有两条记录（代码 A、代码 B），然后 push 便可成功</p>\n<blockquote>\n<p>push 后远程仓库中也有两条记录（与本地仓库对应），一条是将远程代码修改为代码 A，一条是再次修改为代码 B，最终呈现代码 B</p></blockquote>\n</blockquote>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"三、常用命令\"><a href=\"#三、常用命令\" class=\"headerlink\" title=\"三、常用命令\"></a>三、常用命令</h2><table>\n<thead>\n<tr>\n<th>类属</th>\n<th>详细命令</th>\n<th>作用</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>pull</td>\n<td>git pull –allow-unrelated-histories</td>\n<td>忽略不相干的文件</td>\n<td>如果远程仓库新代码，但与本地代码不存在冲突时，在拉取需要执行</td>\n</tr>\n<tr>\n<td></td>\n<td>git pull origin master</td>\n<td>获取远程分支 master 并 merge 到当前分支</td>\n<td></td>\n</tr>\n<tr>\n<td>push</td>\n<td>git push -u origin master</td>\n<td>-u：记录本次推送的分支。相当于执行 2 条命令：<br><br>git push origin master<br><br>git branch –set-upstream master origin&#x2F;master</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git push <remote_name> <branch_name></td>\n<td>推送到指定分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git push origin :<branch_name></td>\n<td>删除远程仓库的分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git push origin –delete dev-tc2</td>\n<td>删除远程仓库的分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git push –set-upstream origin dev</td>\n<td>远程 dev 分支不存在时，创建并提交</td>\n<td></td>\n</tr>\n<tr>\n<td>branch</td>\n<td>git branch</td>\n<td>显示本地分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git branch -a</td>\n<td>显示所有分支，包括已关联的远程分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git branch <branch_name></td>\n<td>根据当前分支创建分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git branch -d <branch_name></td>\n<td>删除分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git branch -D <branch_name></td>\n<td>强制删除</td>\n<td></td>\n</tr>\n<tr>\n<td>checkout</td>\n<td>git checkout <branch_name></td>\n<td>切换分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git checkout -b <branch_name></td>\n<td>根据当前分支创建后切换到新分支</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git checkout -b <branch_name> origin&#x2F;master</td>\n<td>根据某个指定分支（可以是远程的或本地的）创建后切换到新分支</td>\n<td></td>\n</tr>\n<tr>\n<td>diff</td>\n<td>git diff</td>\n<td>比较未提交的修改与当前版本的区别</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git diff head^</td>\n<td>比较与上一个版本的区别</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git diff origin&#x2F;master..master</td>\n<td>比较远程分支 master 上有但本地分支 master 上没有的</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git diff origin&#x2F;master..master –stat</td>\n<td>只显示差异的文件，不显示具体内容</td>\n<td></td>\n</tr>\n<tr>\n<td>remote</td>\n<td>git remote add origin git+ssh:&#x2F;&#x2F;<a href=\"mailto:&#x67;&#105;&#116;&#64;&#49;&#57;&#50;&#46;&#x31;&#x36;&#x38;&#46;&#53;&#51;&#x2e;&#x31;&#x36;&#56;\">&#x67;&#105;&#116;&#64;&#49;&#57;&#50;&#46;&#x31;&#x36;&#x38;&#46;&#53;&#51;&#x2e;&#x31;&#x36;&#56;</a>&#x2F;VT.git</td>\n<td>添加远程仓库</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git remote -v</td>\n<td>显示远程版本</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git remote show <remote_name></td>\n<td>显示远程信息</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git remote remove origin</td>\n<td>删除远程仓库</td>\n<td></td>\n</tr>\n<tr>\n<td>restore</td>\n<td>git restore <file_name></td>\n<td>清除本地修改</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git restore .</td>\n<td>清除所有修改</td>\n<td></td>\n</tr>\n<tr>\n<td>revert</td>\n<td>git revert <commit-hash></td>\n<td>回滚代码，但不会删除原提交记录，而且会创建一个新的提交记录</td>\n<td>相当于修改了代码，然后再次提交，只不过代码内容和以前某个版本一样</td>\n</tr>\n<tr>\n<td>reset</td>\n<td>–soft：撤销 commit 操作，代码保留<br>–mixed：撤销 add、commit 操作，代码保留<br>–hard：撤销 add、commit 操作，代码不保留！</td>\n<td></td>\n<td>撤销后提交记录是否保留（本地不保留，远程保留）</td>\n</tr>\n<tr>\n<td></td>\n<td>git reset –hard<commit-hash></td>\n<td>回滚代码到指定的提交记录点</td>\n<td><commit-hash>可以用 git log 命令获得</td>\n</tr>\n<tr>\n<td></td>\n<td>git reset –hard HEAD</td>\n<td>将当前版本重置为 HEAD</td>\n<td>通常用于 merge 失败回退</td>\n</tr>\n<tr>\n<td></td>\n<td>git reset –hard head^</td>\n<td>回滚代码到第二新的记录点</td>\n<td>注意最后有个符号^是必须的,，它表示上一个版本</td>\n</tr>\n<tr>\n<td>merge</td>\n<td>git merge <branch_name></td>\n<td>合并其它分支至当前分支。（如果是远程分支：git merge origin&#x2F;master）</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git merge –allow-unrelated-histories origin&#x2F;<branch_name></td>\n<td>忽略不相干的文件</td>\n<td></td>\n</tr>\n<tr>\n<td>ls</td>\n<td>git ls-files</td>\n<td>查看列出仓库文件</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git ls-tree HEAD</td>\n<td>显示某个 git 对象</td>\n<td></td>\n</tr>\n<tr>\n<td>stash</td>\n<td>git stash</td>\n<td>暂存当前修改，将所有文件至为 HEAD 状态</td>\n<td>与 commit 属于两种不同的操作</td>\n</tr>\n<tr>\n<td></td>\n<td>git stash pop</td>\n<td>弹出并应用最新一条暂存的修改</td>\n<td>弹出后会删除该条暂存记录</td>\n</tr>\n<tr>\n<td></td>\n<td>git stash apply</td>\n<td>应用最新一条暂存的修改</td>\n<td>应用后不会删除该条暂存记录</td>\n</tr>\n<tr>\n<td></td>\n<td>git stash clear</td>\n<td>清空暂存</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git stash drop stash@{0}</td>\n<td>删除某条暂存记录</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git stash list</td>\n<td>查看所有暂存</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git stash show -p stash@{0}</td>\n<td>查看第一次暂存</td>\n<td></td>\n</tr>\n<tr>\n<td>config</td>\n<td>git config –global user.name “username”</td>\n<td>配置用户名</td>\n<td>–global 表示配置全局变量，去掉则只在当前有效</td>\n</tr>\n<tr>\n<td></td>\n<td>git config –global user.password “password”</td>\n<td>配置密码</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git config –global user.email “email”</td>\n<td>配置用户邮箱</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git config –global credential.helper store</td>\n<td>保存认证信息</td>\n<td></td>\n</tr>\n<tr>\n<td>git log</td>\n<td></td>\n<td>查看提交记录</td>\n<td>如果记录条数过多，可以按 q 退出查看</td>\n</tr>\n<tr>\n<td>show</td>\n<td>git show <commit-hash></td>\n<td>显示某次提交的详细内容</td>\n<td></td>\n</tr>\n<tr>\n<td>git status</td>\n<td></td>\n<td>查看有修改的文件</td>\n<td></td>\n</tr>\n<tr>\n<td>rm</td>\n<td>git rm <file></td>\n<td>删除已 add 但未 commit 的文件</td>\n<td></td>\n</tr>\n<tr>\n<td>add</td>\n<td>git add -u</td>\n<td>是 git add –update 的简写，只添加已修改的文件，并忽略未跟踪的文件</td>\n<td></td>\n</tr>\n<tr>\n<td>commit</td>\n<td>git commit -am ‘xxx’</td>\n<td>将 add 和 commit 合为一步</td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>git commit –amend -m “新的注释”</td>\n<td>覆盖最后一次 commit 的注释，上一次的注释记录会消失</td>\n<td>git commit –amend 不加-m 会进入命令行模式，然后修改注释</td>\n</tr>\n</tbody></table>\n<h2 id=\"四、删除远程文件，但不删除本地对应文件\"><a href=\"#四、删除远程文件，但不删除本地对应文件\" class=\"headerlink\" title=\"四、删除远程文件，但不删除本地对应文件\"></a>四、删除远程文件，但不删除本地对应文件</h2><ul>\n<li><p>法一：</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached  tests # --cached不会把本地的tests删除</span><br><span class=\"line\">git commit -m &#x27;delete tests&#x27;</span><br><span class=\"line\">git push -u origin master</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>法二：修改.gitignore 文件,将不需要的文件过滤掉，然后执行命令</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git rm -r --cached .</span><br><span class=\"line\">git add .</span><br><span class=\"line\">git commit</span><br><span class=\"line\">git push  -u origin master</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"五、git-放弃当前修改\"><a href=\"#五、git-放弃当前修改\" class=\"headerlink\" title=\"五、git 放弃当前修改\"></a>五、git 放弃当前修改</h2><ul>\n<li><p>不保留改动的代码，但是未 add 的文件无法放弃</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git checkout -- tests/one_test.go</span><br><span class=\"line\">git restore tests/one_test.go</span><br><span class=\"line\">git reset --hard</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>要删除未 add 的文件，如下：</p>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clean -f  # 删除所有文件</span><br><span class=\"line\">git clean -fd  # 删除所有文件和目录</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"六、git-reset-撤销\"><a href=\"#六、git-reset-撤销\" class=\"headerlink\" title=\"六、git reset 撤销\"></a>六、git reset 撤销</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>问：撤销后提交记录是否保留？</p>\n<blockquote>\n<p>解：本地不保留，远程保留</p></blockquote>\n</blockquote>\n<p>–soft：该命令表示撤销代码到暂存区之后和 commit 之前，代码在本地不会改变。<br>–mixed：该命令表示撤销代码到暂存区和 commit 之前，代码在本地不会改变。<br>–hard：该命令表示回退代码到某个版本下，代码在本地会改变到指定版本下，谨慎操作。</p>\n<p>图示：<br><img src=\"/git%E6%92%A4%E9%94%80%E5%9B%BE%E7%A4%BA.png\"></p>\n","text":"git-01-常用命令一、首次推送本地项目代码流程 在项目目录下，创建本地仓库： 1git init 将文件加入到本地仓库： 1git add * 或者 git...","permalink":"/post/命令/git/git-01-常用命令","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"命令","slug":"命令","count":15,"path":"api/categories/命令.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#git-01-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">git-01-常用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E9%A6%96%E6%AC%A1%E6%8E%A8%E9%80%81%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%BB%A3%E7%A0%81%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">一、首次推送本地项目代码流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E9%9D%9E%E9%A6%96%E6%AC%A1%E6%8E%A8%E9%80%81%E7%9A%84%E5%87%A0%E7%A7%8D%E6%83%85%E5%86%B5\"><span class=\"toc-text\">二、非首次推送的几种情况</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">三、常用命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9B%E3%80%81%E5%88%A0%E9%99%A4%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%EF%BC%8C%E4%BD%86%E4%B8%8D%E5%88%A0%E9%99%A4%E6%9C%AC%E5%9C%B0%E5%AF%B9%E5%BA%94%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">四、删除远程文件，但不删除本地对应文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%94%E3%80%81git-%E6%94%BE%E5%BC%83%E5%BD%93%E5%89%8D%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">五、git 放弃当前修改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%AD%E3%80%81git-reset-%E6%92%A4%E9%94%80\"><span class=\"toc-text\">六、git reset 撤销</span></a></li></ol></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"git-02-ssh地址无效","uid":"8f45e67ec22c8ab717fbba50f4923e8f","slug":"命令/git/git-02-ssh地址无效","date":"2024-10-12T08:41:46.508Z","updated":"2024-10-19T08:15:05.378Z","comments":true,"path":"api/articles/命令/git/git-02-ssh地址无效.json","keywords":null,"cover":"/images/cover/7.png","text":"git-02-ssh 地址无效https://blog.csdn.net/xb_zed/article/details/111357020 生成公、私钥：ssh...","permalink":"/post/命令/git/git-02-ssh地址无效","photos":[],"count_time":{"symbolsCount":232,"symbolsTime":"1 mins."},"categories":[{"name":"命令","slug":"命令","count":15,"path":"api/categories/命令.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"docker-05-volume","uid":"d1606efea8d5cfe2a8c493a980499133","slug":"命令/docker/docker-05-volume","date":"2024-10-12T08:41:16.500Z","updated":"2024-10-19T02:30:48.004Z","comments":true,"path":"api/articles/命令/docker/docker-05-volume.json","keywords":null,"cover":"/images/cover/7.png","text":"docker-05-volume 参考 参考 参考 参考 使用方式： 启动容器时：docker run -v /A:/B 将宿主机的/A 目录挂载到容器内的/B...","permalink":"/post/命令/docker/docker-05-volume","photos":[],"count_time":{"symbolsCount":587,"symbolsTime":"1 mins."},"categories":[{"name":"命令","slug":"命令","count":15,"path":"api/categories/命令.json"}],"tags":[{"name":"技术","slug":"技术","count":158,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon_2.jfif","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}