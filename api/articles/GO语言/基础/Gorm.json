{"title":"Gorm","uid":"2a28425a1a7d4e14f42cf293b79ac333","slug":"GO语言/基础/Gorm","date":"2024-10-12T02:26:58.608Z","updated":"2024-10-19T08:24:11.029Z","comments":true,"path":"api/articles/GO语言/基础/Gorm.json","keywords":null,"cover":"/images/cover/5.png","content":"<h1 id=\"Gorm\"><a href=\"#Gorm\" class=\"headerlink\" title=\"Gorm\"></a>Gorm</h1><ol>\n<li><p>sql 预加载 Preload()函数可以优化查询性能，怎么优化的？<br>Preload()：用于查询数据库中有关联的表。会在查询时，将关联表的数据一并查出来<br><a href=\"https://learnku.com/docs/gorm/v2/belongs_to/9736\">学习</a></p>\n</li>\n<li><p>Pluck() 方法用于从数据库中查询单列，并扫描结果到切片（slice）</p>\n <figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 单列查询</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> ages []<span class=\"type\">int64</span></span><br><span class=\"line\">db.Model(&amp;User&#123;&#125;).Pluck(<span class=\"string\">&quot;age&quot;</span>, &amp;ages)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多列查询</span></span><br><span class=\"line\">db.Select(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;age&quot;</span>).Scan(&amp;users)</span><br><span class=\"line\">db.Select(<span class=\"string\">&quot;name&quot;</span>, <span class=\"string\">&quot;age&quot;</span>).Find(&amp;users)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Find()和 Scan()的区别？<br><a href=\"https://juejin.cn/post/6984603771485569038\">参见</a><br><code>Find(dest interface&#123;&#125;, conds ...interface&#123;&#125;)</code>：dest 是参选结果接收者，conds 是查询条件</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>conds 查询条件也可以直接作为 Where 的参数，常用的参数有两类：String，Struct 或 Map</p></blockquote>\n<p> <code>First(dest interface&#123;&#125;, conds ...interface&#123;&#125;)</code>：用法与 Find 一致，只是 First 仅返回根据 id 排序后的第一条结果</p>\n</li>\n<li><p>Model()的参数一般是表对应结构体对象的指针，Table()的参数是数据库中的表名。</p>\n</li>\n<li><p><code>*gorm.DB 和*sql.DB</code> 的区别</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>*gorm.DB</code> 用于执行 sql 语句的操作<br><code>*sql.DB</code> 是数据库连接池实例，用于关闭数据库连接、或设置一些连接配置，它由 DB()生成：<code>*sql.DB := *gorm.DB.DB()</code></p></blockquote>\n</li>\n<li><p>代码</p>\n</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> tests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;github.com/gin-gonic/gin/binding&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;gorm.io/gorm&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;strconv&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;testing&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;time&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">TestGorm</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">username := <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">password := <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">host := <span class=\"string\">&quot;127.0.0.1&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">port := <span class=\"number\">3306</span></span><br><span class=\"line\"></span><br><span class=\"line\">dbName := <span class=\"string\">&quot;myDB&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">timeout := <span class=\"string\">&quot;10s&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">dsn := fmt.Sprintf(<span class=\"string\">&quot;%s:%s@tcp(%s:%d)/%s?&quot;</span>+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;charset=utf8&amp;parseTime=True&amp;loc=Local&amp;timeout=%s&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">username, password, host, port, dbName, timeout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">panic</span>(<span class=\"string\">&quot;database connect failed&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//设置数据库的最大连接数等参数</span></span><br><span class=\"line\"></span><br><span class=\"line\">sqlDB, _ := db.DB()</span><br><span class=\"line\"></span><br><span class=\"line\">sqlDB.SetMaxIdleConns(<span class=\"number\">10</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sqlDB.SetMaxOpenConns(<span class=\"number\">100</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">sqlDB.SetConnMaxLifetime(<span class=\"number\">10</span> * time.Second)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">表结构体</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">通过POST传入JSON数据时：</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">json字段名不区分大小写（不止是首字母的大小写）；</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">如定义时设置了json别名（如下json:&quot;name&quot;、json:&quot;ttt&quot;），则传入的json字段名必须与别名相同（但不区分大小写），而不是与结构体字段名相同；</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">如定义时未设置json别名，则传入的json字段名与结构体字段名相同。</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> List <span class=\"keyword\">struct</span> &#123; <span class=\"comment\">//表名会自动变为复数，如：lists</span></span><br><span class=\"line\"></span><br><span class=\"line\">gorm.Model</span><br><span class=\"line\"></span><br><span class=\"line\">UserName   <span class=\"type\">string</span> <span class=\"string\">`gorm:&quot;type:varchar(20);not null&quot; json:&quot;name&quot; binding:&quot;required&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\">User_state <span class=\"type\">string</span> <span class=\"string\">`gorm:&quot;type:varchar(20);not null&quot; json:&quot;state&quot; binding:&quot;required&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\">Phone      <span class=\"type\">string</span> <span class=\"string\">`gorm:&quot;type:varchar(20);not null&quot; json:&quot;ttt&quot; binding:&quot;required&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\">Address    <span class=\"type\">string</span> <span class=\"string\">`gorm:&quot;type:varchar(100);column:addr&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">db.AutoMigrate(&amp;List&#123;&#125;) <span class=\"comment\">//根据结构体List自动创建表lists，如果表已存在，则会略过</span></span><br><span class=\"line\"></span><br><span class=\"line\">route := gin.Default()</span><br><span class=\"line\"></span><br><span class=\"line\">route.POST(<span class=\"string\">&quot;add&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(context *gin.Context)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> list List</span><br><span class=\"line\"></span><br><span class=\"line\">err := context.ShouldBindBodyWith(&amp;list, binding.JSON)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">panic</span>(<span class=\"string\">&quot;bind json failed&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">context.JSON(http.StatusOK, gin.H&#123;<span class=\"string\">&quot;add data&quot;</span>: <span class=\"string\">&quot;ok&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//增</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.Create(&amp;list) <span class=\"comment\">//将POST传入的json写入数据库，新增而不是覆盖</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">route.DELETE(<span class=\"string\">&quot;/delete/:id&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(context *gin.Context)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data []List</span><br><span class=\"line\"></span><br><span class=\"line\">id := context.Param(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//如果id不唯一，Find()的结果可能有多行，所以用[]List接收</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.Where(<span class=\"string\">&quot;id= ?&quot;</span>, id).Find(&amp;data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(data) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">context.String(http.StatusNotFound, <span class=\"string\">&quot;id not exist&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.Debug().Delete(&amp;data).Where(<span class=\"string\">&quot;id= ?&quot;</span>, id)</span><br><span class=\"line\"></span><br><span class=\"line\">context.String(http.StatusOK, <span class=\"string\">&quot;ok&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">route.PUT(<span class=\"string\">&quot;put/:id&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(context *gin.Context)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data List</span><br><span class=\"line\"></span><br><span class=\"line\">id := context.Param(<span class=\"string\">&quot;id&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">db.Select(<span class=\"string\">&quot;id&quot;</span>).Where(<span class=\"string\">&quot;id=?&quot;</span>, id).Find(&amp;data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> data.ID == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">context.String(http.StatusNotFound, <span class=\"string\">&quot;id not exist&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//注意：使用Bind及相似函数时，context必须包含请求体</span></span><br><span class=\"line\"></span><br><span class=\"line\">err := context.ShouldBindBodyWith(&amp;data, binding.JSON)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//err := context.ShouldBindJSON(&amp;data)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">context.String(http.StatusNotFound, <span class=\"string\">&quot;analyse json failed&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//改</span></span><br><span class=\"line\"></span><br><span class=\"line\">err := db.Debug().Where(<span class=\"string\">&quot;id=?&quot;</span>, id).Updates(&amp;data).Error</span><br><span class=\"line\"></span><br><span class=\"line\">fmt.Println(err)</span><br><span class=\"line\"></span><br><span class=\"line\">context.String(http.StatusOK, <span class=\"string\">&quot;ok&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">route.GET(<span class=\"string\">&quot;/get&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(context *gin.Context)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> data []List</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> total <span class=\"type\">int64</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//每页显示数量</span></span><br><span class=\"line\"></span><br><span class=\"line\">pageSize, _ := strconv.Atoi(context.Query(<span class=\"string\">&quot;pageSize&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//要查询的是第几页</span></span><br><span class=\"line\"></span><br><span class=\"line\">page, _ := strconv.Atoi(context.Query(<span class=\"string\">&quot;page&quot;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">offset := (page - <span class=\"number\">1</span>) * pageSize</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//查</span></span><br><span class=\"line\"></span><br><span class=\"line\">db.Debug().Model(data).Count(&amp;total).Limit(pageSize).Offset(offset).Find(&amp;data) <span class=\"comment\">//会执行两个sql：count和select</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(data) == <span class=\"number\">0</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">context.JSON(http.StatusNotFound, gin.H&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;code&quot;</span>:    <span class=\"number\">400</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;nothing&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">context.JSON(http.StatusOK, gin.H&#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;code&quot;</span>:     <span class=\"number\">200</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;message&quot;</span>:  <span class=\"string\">&quot;success&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;pageSize&quot;</span>: pageSize,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;page&quot;</span>:     page,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;total&quot;</span>:    total,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;offset&quot;</span>:   offset,</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;data&quot;</span>:     data,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">PORT := <span class=\"string\">&quot;8080&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">route.Run(<span class=\"string\">&quot;:&quot;</span> + PORT)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"7\">\n<li>Preload()</li>\n</ol>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> tests</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;fmt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;gorm.io/driver/mysql&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;gorm.io/gorm&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;testing&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">Preload：</span></span><br><span class=\"line\"><span class=\"comment\">1）必须存在外键，默认的外键是“引用的表名+该表唯一索引字段名”</span></span><br><span class=\"line\"><span class=\"comment\">2）Preload(&quot;Company&quot;)中的Company是字段名，而不是表名</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">Test071801</span><span class=\"params\">(t *testing.T)</span></span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">db := initDB()</span><br><span class=\"line\"></span><br><span class=\"line\">_ = db.AutoMigrate(&amp;User&#123;&#125;, &amp;Company&#123;&#125;, &amp;Card&#123;&#125;, &amp;Language&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">_ = initCompany(db)</span><br><span class=\"line\"></span><br><span class=\"line\">_ = initUser(db)</span><br><span class=\"line\"></span><br><span class=\"line\">_ = initCard(db)</span><br><span class=\"line\"></span><br><span class=\"line\">_ = initLanguage(db)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> u User</span><br><span class=\"line\">db.Debug().Preload(<span class=\"string\">&quot;Company&quot;</span>).Preload(<span class=\"string\">&quot;Card&quot;</span>).Preload(<span class=\"string\">&quot;Cards&quot;</span>).Preload(<span class=\"string\">&quot;Languages&quot;</span>).Find(&amp;u)</span><br><span class=\"line\">t.Log(<span class=\"string\">&quot;-----------------------------&quot;</span>)</span><br><span class=\"line\">t.Log(u)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"># 输出：</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `cards` WHERE `cards`.`number` = 1</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `cards` WHERE `cards`.`number` = 1</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `companies` WHERE `companies`.`code` = 1</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `user_languages` WHERE `user_languages`.`user_id` = 1</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `languages` WHERE `languages`.`id` IN (1,2)</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `users`</span></span><br><span class=\"line\"><span class=\"comment\">&#123;1 User1 1 &#123;1 1 Company1&#125; &#123;2 Card111 1&#125; [&#123;1 Card1 1&#125; &#123;2 Card111 1&#125;] [&#123;1 Language1 []&#125; &#123;2 Language2 []&#125;]&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> l Language</span><br><span class=\"line\">db.Debug().Preload(<span class=\"string\">&quot;Users&quot;</span>).Find(&amp;l)</span><br><span class=\"line\">t.Log(<span class=\"string\">&quot;-----------------------------&quot;</span>)</span><br><span class=\"line\">t.Log(l)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"># 输出</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `user_languages` WHERE `user_languages`.`language_id` = 1</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `users` WHERE `users`.`id` IN (1,2)</span></span><br><span class=\"line\"><span class=\"comment\">SELECT * FROM `languages`</span></span><br><span class=\"line\"><span class=\"comment\">&#123;1 Language1 [&#123;1 User1 1 &#123;0 0 &#125; &#123;0  0&#125; [] []&#125; &#123;2 User2 2 &#123;0 0 &#125; &#123;0  0&#125; [] []&#125;]&#125;</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Company <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">ID   <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">Code <span class=\"type\">int</span> <span class=\"string\">`gorm:&quot;unique&quot;`</span> <span class=\"comment\">// 因为不是主键，所以要加unique，外键的引用来源必须是唯一索引</span></span><br><span class=\"line\"></span><br><span class=\"line\">Name <span class=\"type\">string</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> User <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">ID       <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">Name     <span class=\"type\">string</span></span><br><span class=\"line\"></span><br><span class=\"line\">UniqueId <span class=\"type\">int</span> <span class=\"string\">`gorm:&quot;unique&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 注意下面Company、Card的标签的写法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// user表新建一个外键(UniqueId-&gt;Company.Code)</span></span><br><span class=\"line\"></span><br><span class=\"line\">Company Company <span class=\"string\">`gorm:&quot;foreignKey:UniqueId;references:Code&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一对一的关系，card表新建一个外键fk_users_card(Number-&gt;User.UniqueId)</span></span><br><span class=\"line\"></span><br><span class=\"line\">Card Card <span class=\"string\">`gorm:&quot;foreignKey:Number;references:UniqueId&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一对多的关系，card表新建一个外键fk_users_cards(Number-&gt;User.ID)，因为Cards没有指定引用来源，所以会默认是user表的ID；</span></span><br><span class=\"line\"></span><br><span class=\"line\">Cards     []Card     <span class=\"string\">`gorm:&quot;foreignKey:Number;&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 多对多的关系，会新建一个关系表user_languages，有两个外键：User.ID、Language.ID</span></span><br><span class=\"line\"></span><br><span class=\"line\">Languages []Language <span class=\"string\">`gorm:&quot;many2many:user_languages;&quot;`</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Card <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">ID     <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">Name   <span class=\"type\">string</span></span><br><span class=\"line\"></span><br><span class=\"line\">Number <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> Language <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">ID    <span class=\"type\">int</span></span><br><span class=\"line\"></span><br><span class=\"line\">Name  <span class=\"type\">string</span></span><br><span class=\"line\"></span><br><span class=\"line\">Users []User <span class=\"string\">`gorm:&quot;many2many:user_languages&quot;`</span> <span class=\"comment\">// 多对多的关系，这里也可以写标签</span></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">initCompany</span><span class=\"params\">(db *gorm.DB)</span></span> <span class=\"type\">error</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">err := db.Create(&amp;[]Company&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Code: <span class=\"number\">1</span>, Name: <span class=\"string\">&quot;Company1&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Code: <span class=\"number\">2</span>, Name: <span class=\"string\">&quot;Company2&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Code: <span class=\"number\">3</span>, Name: <span class=\"string\">&quot;Company3&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Code: <span class=\"number\">4</span>, Name: <span class=\"string\">&quot;Company4&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;).Error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> err</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">initUser</span><span class=\"params\">(db *gorm.DB)</span></span> <span class=\"type\">error</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">err := db.Create(&amp;[]User&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;User1&quot;</span>, UniqueId: <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;User2&quot;</span>, UniqueId: <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;User3&quot;</span>, UniqueId: <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;User4&quot;</span>, UniqueId: <span class=\"number\">4</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;).Error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> err</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">initCard</span><span class=\"params\">(db *gorm.DB)</span></span> <span class=\"type\">error</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">err := db.Create(&amp;[]Card&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Card1&quot;</span>, Number: <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Card111&quot;</span>, Number: <span class=\"number\">1</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Card2&quot;</span>, Number: <span class=\"number\">2</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Card3&quot;</span>, Number: <span class=\"number\">3</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Card4&quot;</span>, Number: <span class=\"number\">4</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;).Error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> err</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">initLanguage</span><span class=\"params\">(db *gorm.DB)</span></span> <span class=\"type\">error</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">err := db.Create(&amp;[]Language&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Language1&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Language2&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Language3&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;Name: <span class=\"string\">&quot;Language4&quot;</span>&#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;).Error</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> err</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">initDB</span><span class=\"params\">()</span></span> *gorm.DB &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">username := <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">password := <span class=\"string\">&quot;root&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">host := <span class=\"string\">&quot;127.0.0.1&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">port := <span class=\"number\">3306</span></span><br><span class=\"line\"></span><br><span class=\"line\">dbName := <span class=\"string\">&quot;myDB&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">timeout := <span class=\"string\">&quot;10s&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">dsn := fmt.Sprintf(<span class=\"string\">&quot;%s:%s@tcp(%s:%d)/%s?&quot;</span>+</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&quot;charset=utf8&amp;parseTime=True&amp;loc=Local&amp;timeout=%s&quot;</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">username, password, host, port, dbName, timeout)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//连接数据库</span></span><br><span class=\"line\"></span><br><span class=\"line\">db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config&#123;&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">panic</span>(<span class=\"string\">&quot;database connect failed&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> db</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","text":"Gorm sql 预加载 Preload()函数可以优化查询性能，怎么优化的？Preload()：用于查询数据库中有关联的表。会在查询时，将关联表的数据一并查出...","permalink":"/post/GO语言/基础/Gorm","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Gorm\"><span class=\"toc-text\">Gorm</span></a></li></ol>","author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"库--casbin","uid":"d7434239378216dfafb37dc4b2b89c73","slug":"GO语言/基础/库--casbin","date":"2024-10-12T02:26:58.632Z","updated":"2024-10-19T08:24:13.211Z","comments":true,"path":"api/articles/GO语言/基础/库--casbin.json","keywords":null,"cover":"/images/cover/5.png","text":"库–casbin 创建权限配置来源 adapter（db 或者 file） 1adapter, err := gormadapter.NewAdapterByD...","permalink":"/post/GO语言/基础/库--casbin","photos":[],"count_time":{"symbolsCount":800,"symbolsTime":"1 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}},"next_post":{"title":"Gin","uid":"1844acb7289f08bbbe7bcf325b1cd691","slug":"GO语言/基础/Gin","date":"2024-10-12T02:26:58.459Z","updated":"2024-10-19T08:24:08.834Z","comments":true,"path":"api/articles/GO语言/基础/Gin.json","keywords":null,"cover":"/images/cover/5.png","text":"Gin 学习：https://www.liwenzhou.com/posts/Go/gin/#c-0-6-0 获取参数：context.Get()：从 Keys...","permalink":"/post/GO语言/基础/Gin","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"GO语言","slug":"GO语言","count":77,"path":"api/categories/GO语言.json"}],"tags":[{"name":"技术","slug":"技术","count":168,"path":"api/tags/技术.json"}],"author":{"name":"upstreamboat","slug":"blog-author","avatar":"images/favicon/favicon.ico","link":"/","description":"nothing to say","socials":{"github":"https://github.com/upstreamboat","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/images/favicon/bilibili.svg","link":"https://www.bilibili.com/"},"chatgpt":{"icon":"/images/favicon/chatgpt.svg","link":"https://chatgpt.com/"}}}}}}